//
//  CleanSwiftViewController.swift
//  Homework8_VIPER
//
//  Created by Кирилл Афонин on 29/10/2019.
//  Copyright (c) 2019 Кирилл Афонин. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CleanSwiftDisplayLogic: class {
    func displayImage(viewModel: CleanSwift.ImageData.ViewModel)
    func showAlert()
}

class CleanSwiftViewController: UIViewController, CleanSwiftDisplayLogic {
    var interactor: CleanSwiftBusinessLogic?
    var router: (NSObjectProtocol & CleanSwiftRoutingLogic & CleanSwiftDataPassing)?
    
    let imageView = UIImageView()
    let downloadButton = UIButton(type: .custom)
    let showButton = UIButton(type: .custom)
    let clearButton = UIButton(type: .custom)
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = CleanSwiftInteractor()
        let presenter = CleanSwiftPresenter()
        let router = CleanSwiftRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // настройка представления
    private func setupView() {
        let midX = view.frame.midX - 100
        
        imageView.frame = CGRect(x: midX, y: 100, width: 200, height: 200)
        imageView.backgroundColor = .blue
        view.addSubview(imageView)
        
        showButton.frame = CGRect(x: midX, y: 350, width: 200, height: 25)
        showButton.setTitleColor(.black, for: .normal)
        showButton.setTitle("Отобразить", for: .normal)
        showButton.addTarget(self, action: #selector(setImage), for: .touchUpInside)
        view.addSubview(showButton)
        
        downloadButton.frame = CGRect(x: midX, y: 400, width: 200, height: 25)
        downloadButton.setTitleColor(.black, for: .normal)
        downloadButton.setTitle("Скачать", for: .normal)
        downloadButton.addTarget(self, action: #selector(getImage), for: .touchUpInside)
        view.addSubview(downloadButton)
        
        clearButton.frame = CGRect(x: midX, y: 450, width: 200, height: 25)
        clearButton.setTitleColor(.black, for: .normal)
        clearButton.setTitle("Очистить кэш", for: .normal)
        clearButton.addTarget(self, action: #selector(clearCache), for: .touchUpInside)
        view.addSubview(clearButton)
    }
    
    // MARK: Routing
    
    func showAlert() {
        if let alert = router?.setupAlert() {
            self.present(alert, animated: true, completion: nil)
        } else {
            print("There are no image! Please, download it first")
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        
        view.backgroundColor = .white
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        
        setupView()
    }
    
    // MARK: работа с изображением
    
    @objc func getImage()
    {
        let request = CleanSwift.ImageData.Request()
        interactor?.getImage(request: request)
    }
    
    @objc func setImage() {
        let request = CleanSwift.ImageData.Request()
        interactor?.setImage(request: request)
    }
    
    func displayImage(viewModel: CleanSwift.ImageData.ViewModel)
    {
        imageView.image = viewModel.image
    }
    
    @objc func clearCache() {
        let request = CleanSwift.ImageData.Request()
        interactor?.clearCache(request: request)
    }
    
}
